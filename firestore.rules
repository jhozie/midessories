rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Allow users to read their own data
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to create their own document during signup/checkout
      allow create: if request.auth != null && 
        request.auth.uid == userId &&
        (
          // Simplified validation for checkout account creation
          request.resource.data.keys().hasAll(['firstName', 'lastName', 'email', 'phone', 'createdAt']) &&
          (!request.resource.data.keys().hasAny(['role']) || request.resource.data.role == 'customer')
        );
      
      // Allow users to update their own data (except role)
      allow update: if request.auth != null && 
        request.auth.uid == userId &&
        !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role']);
    }
    
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
         request.auth.uid == resource.data.userId);
      
      // Allow anyone to create orders (for both guest and logged-in users)
      allow create: if true;
      
      // Only admins can update orders
      allow update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /delivery_methods/{methodId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /delivery_zones/{zoneId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.customerId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
  }
} 